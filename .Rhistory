runApp('Desktop/dashboard_alpha/aplha_prototype.R')
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv')
df
library(plotly)
df
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv')
library(tidyverse)
library(plotly)
df <- read.csv("https://raw.githubusercontent.com/bcdunbar/datasets/master/californiaPopulation.csv")
df <- read.csv("http://raw.githubusercontent.com/bcdunbar/datasets/master/californiaPopulation.csv")
library(highcharter)
library(dplyr)
library(tibble)
getwd()
load('/home/davi/Desktop/dashboard_alpha/brazil_map.RData')
brazil_data <- get_data_from_map(brazil_map)
brazil_data
unique(brazil_data$name)
states <- unique(brazil_data$name)
states
library(stringr)
str_replace_all(states, "[[:punct:]]", " ")
states
str_replace_all(states, "[[:punct:]]", " ")
str_replace_all(states, "[^[:alnum:]]", " ")
states_names <- unique(brazil_data$name)
states_abrev <- unique(brazil_data$`woe-name`)
states_abrev
states_abrev <- unique(brazil_data$`hc-group`)
states_abrev
brazil_data
states_abrev <- unique(brazil_data$`hc-a2`)
states_abrev
sample(2,4)
sample(2,4:100)
sample(2:100,4)
sample(2:100,1)
sample(2:100,1,10)
sample(2:100,1)
c(sample(2:100,1)*22)
replicate(10 ,sample(2:100,1), replace = TRUE))
replicate(10 ,sample(2:100,1), replace = TRUE)
sample(2:100,1)
sample(2:100,4)
sample(2:100,length(states_names))
sex <- c('male', 'female')*11
sex <- c(c('male')*10, 'female')
'male'*3
sex <- rep('male', 'female', 2)
sex
sex <- rep(c('male', 'female'), 2)
sex
sex <- rep(c('male', 'female'), 11)
sex
length(states_names)
sex <- rep(c('male', 'female', 'female'), 9)
sex
length(states_names))
length(states_names)
sex <- rep(c('male', 'female', 'female'), 9)
sex
counts
counts <- sample(2:100,length(states_names))
counts
length(states_names)
states_names
states_abrev
counts <- sample(140000:1000000, length(states_names))
sex <- rep(c('male', 'female', 'female'), 9)
states_names <- unique(brazil_data$name)
states_abrev <- unique(brazil_data$`hc-a2`)
counts <- sample(140000:1000000, length(states_names))
sex <- rep(c('male', 'female', 'female'), 9)
states_names
states_abrev
counts
sex
data <- cbind(states_names, states_abrev, counts, sex)
write.table(file='data_text.txt', data, row.names = F, sep = '\t', quote = F)
data
runApp('Desktop/dashboard_alpha/aplha_prototype.R')
install.package('benchmarkme)
install.package('benchmarkme)
d
install.package('benchmarkme')
install.packages('benchmarkme')
library(Rfacebook)
install.packages('Rfacebook')
library(tidyverse)
install.packages('tidyverse')
library(ggalt)
install.packages('readxl')
124.50/115
install.packages('reprex')
install.packages('tidyverse')
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
knitr::opts_chunk$set(echo = TRUE)
concat_data$Cabin[which(concat_data$Cabin == '')] <- NA
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(mice)
library(dplyr)
library(ggplot2)
library(stringr)
library(purrr)
library(corrplot)
train <- read.csv(file='train.csv', sep=',', stringsAsFactors = FALSE)
train$dataTag <- 'train'
test <-  read.csv(file='test.csv', sep=',', stringsAsFactors = FALSE)
test$dataTag  <- 'test'
test$Survived <- NA
concat_data <- train %>% bind_rows(test)
head(concat_data)
summary(concat_data)
concat_data$Cabin[which(concat_data$Cabin == '')] <- NA
concat_data$Embarked[which(concat_data$Embarked == '')] <- NA
concat_data$Survived <- as.factor(concat_data$Survived)
concat_data$Pclass  <- as.factor(concat_data$Pclass)
concat_data$Sex <- as.factor(concat_data$Sex)
concat_data$Ticket <- as.factor(concat_data$Ticket)
concat_data$Cabin <- as.factor(concat_data$Cabin)
concat_data$Embarked <- as.factor(concat_data$Embarked)
concat_data$dataTag  <- as.factor(concat_data$dataTag)
# Tem um NA tambem, pertence a Pclass 3, vou substituir pela media dessa classe
which(is.na(concat_data$Fare))
concat_data[1044, ]
# Substituindo
concat_data$Fare[1044] <- mean( concat_data$Fare[which(concat_data$Pclass == 3)], na.rm = TRUE)
# Observei 2 NA's em Embarked
concat_data[ which(is.na(concat_data$Embarked)), ]
concat_data$Ticket
# Onde sera que eles embarcaram?
# Por serem classe 1, provavelmente embarcaram em S ou C
table(concat_data$Embarked, concat_data$Pclass)
concat_data$Embarked[ which(is.na(concat_data$Embarked)) ] <- factor("S")
length(concat_data$Name) # n nomes
# preciso tratar melhor, fazer split na virgula e no ponto para capturar o sobrenome e o pronome de tratamento
names <- strsplit(concat_data$Name, ',')
names_no_space <- lapply(names, function(x) gsub(' ', '',x))
# Sobrenpome
surname <- lapply(names_no_space , function(x) x[[1]] )
surname <- unlist(surname)
treat_pron <- lapply(names_no_space , function(x) x[[2]])
treat_pron <- lapply(treat_pron, function(x) strsplit(x, '\\.', perl = TRUE)[[1]])
treat_pron <- map(treat_pron, 1) %>% unlist()
# Adicionando as novas colunas
concat_data$surname <- as.factor(surname)
concat_data$treat_pron <- as.factor(treat_pron)
summary(concat_data)
head(concat_data)
# Vamos ver a distribuicao da idade
# Menores de idade possuem o pronome de tratamento Master
concat_data %>%
select(Age, treat_pron) %>%
na.omit() %>%
ggplot(aes(y=Age, x=treat_pron, fill=treat_pron)) +
geom_boxplot() +
theme_bw()
# Minha primeira estrategia sera usar a idade media de cada classe para preencher os dados faltantes
class_with_na <- concat_data$treat_pron[is.na(concat_data$Age)]
as.character(class_with_na) %>% table()
mean_age_by_class <- concat_data %>%
filter(str_detect(treat_pron, "Dr|Miss|Mr|Mrs|Ms|Master")) %>%
dplyr::group_by(treat_pron) %>%
dplyr::summarize(mean_age = mean(Age, na.rm = TRUE))
mean_age_by_class
for(i in 1:nrow(concat_data)){
if(is.na(concat_data$Age[i]) & concat_data$treat_pron[i] == 'Dr'){
concat_data$Age[i] <- 43.6
}
if(is.na(concat_data$Age[i]) & concat_data$treat_pron[i] == 'Miss'){
concat_data$Age[i] <- 21.8
}
if(is.na(concat_data$Age[i]) & concat_data$treat_pron[i] == 'Mr'){
concat_data$Age[i] <- 32.3
}
if(is.na(concat_data$Age[i]) & concat_data$treat_pron[i] == 'Mrs'){
concat_data$Age[i] <- 37.0
}
if(is.na(concat_data$Age[i]) & concat_data$treat_pron[i] == 'Ms'){
concat_data$Age[i] <- 28.0
}
if(is.na(concat_data$Age[i]) & concat_data$treat_pron[i] == 'Master'){
concat_data$Age[i] <- 5.48
}
}
summary(concat_data)
# Segunda estrategia, fazer regressao da idade usando random forest
# Ordenar por sobrenome
concat_data <- concat_data %>%
arrange(surname)
train_na <- concat_data %>%
select(Age, Pclass, SibSp, Parch, Fare, treat_pron,Sex) %>%
na.omit()
age_model <- train(Age ~ Pclass + Sex  + SibSp + Parch +
Fare + surname + treat_pron ,
data= train_na,
method= 'rf',
tuneGrid= data.frame(mtry= c(2,3,4,5,6,8,10)),
trControl= trainControl(method= 'cv', number= 10,
verboseIter= TRUE))
library(dplyr)
library(tidyr)
mtcars
mtcars %>% contains('cyl')
mtcars %>% filter(contains('cyl'))
library(stringr)
mtcars %>% filter(str_match('cyl'))
mtcars %>% filter(contains('cyl'))
mtcars[ ,cyl]
mtcars[ ,'cyl']
retorna_coluna <- function(df, coluna){
return(df[ ,coluna])
}
retorna_coluna(mtcars, 'cyl')
shiny::runApp('Desktop/teste')
runApp('Desktop/teste')
runApp('Desktop/teste')
runApp('Desktop/teste')
runApp('Desktop/teste')
runApp('Desktop/teste')
runApp('Desktop/teste')
runApp('Desktop/teste')
runApp('Desktop/teste')
runApp('Desktop/teste')
runApp('Desktop/teste')
runApp('Desktop/teste')
table <- read.csv(file='Desktop/teste_excel.csv')
head(table)
library(readxl)
table <- read_excel(sheet = 'Desktop/teste_excel.xls')
table <- read_excel(sheet = '/home/davi/Desktop/teste_excel.xls')
table <- read_excel(path =  '/home/davi/Desktop/teste_excel.xls')
head(table)
table(table$driver_id)
library(dplyr)
table %>% group_by(driver_id) %>%
summarise(mean = mean())
table %>% group_by(driver_id) %>%
summarise(mean = mean( n() ))
table %>% group_by(driver_id) %>%
summarise(mean = mean( n() )) %>%
arrange(desc(driver_id))
table %>% group_by(driver_id) %>%
summarise(mean = mean( n() )) %>%
arrange(desc(mean))
table <- read_excel(path =  '/home/davi/Desktop/teste_excel.xls')
head(table)
table <- as.data.frame(table)
head(table)
table$driver_id <- as.character(table$driver_id)
head(table)
table %>% group_by(driver_id) %>%
summarise(mean = mean( n() )) %>%
arrange(desc(mean))
table %>% group_by(driver_id) %>%
summarise(mean = sum(n())/ n() ) %>%
arrange(desc(mean))
table(table$driver_id)
table %>% group_by(driver_id) %>%
summarise(mean = sum(n())/ n() ) %>%
arrange(desc(mean))
table %>% group_by(driver_id) %>%
summarise(mean = mean( n() )) %>%
arrange(desc(mean))
table %>% group_by(driver_id) %>%
summarize(mean = mean( n() )) %>%
arrange(desc(mean))
head(table)
table %>% group_by(driver_id) %>%
summarize(mean = sum(`earnings (reais)`)/ n() ) %>%
arrange(desc(mean))
head(table)
head(table)
boxplot(table$`earnings (reais)`)
boxplot(table$`distance (meters)`)
boxplot(table$`duration (minutes)`)
boxplot(table$`duration (minutes)`)
boxplot(table$`earnings (reais)`)
summary(table)
table$driver_id == '11013'
which(table$driver_id == '11013')
table[which(table$driver_id == '11013'), ]
table[which(table$driver_id == '43838'), ]
table[which(table$driver_id == '90731'), ]
table[which(table$driver_id == '11013'), ] %>% summary()
table[which(table$driver_id == '11013'), ] %>% summary()
table[which(table$driver_id == '43838'), ] %>% summary()
table[which(table$driver_id == '90731'), ] %>% summary()
boxplot(table$`earnings (reais)`)
boxplot(table$`distance (meters)`)
boxplot(table$`distance (meters)`)
boxplot(table$`distance (meters)`)
boxplot(table$`duration (minutes)`)
boxplot(table$`earnings (reais)`)
table[which(table$driver_id == '90731'), ] %>% summary()
table[which(table$driver_id == '90731'), ]
table[which(table$driver_id == '11013'), ] %>% summary()
table[which(table$driver_id == '11013'), ] %>% summary()
table[which(table$driver_id == '11013'), ]
librar(ggplot2)
library(ggplot2)
head(table)
mean(table$`distance (meters)`)
mean(table$`distance (meters)`, na.rm = T)
table %>% filter(product == 'Loggi Corp')
table(table$product)
table %>% filter(product == 'Corp')
table %>% filter(product == 'Corp') %>%
summarise(mean(`distance (meters)`, na.rm = TRUE))
head(table)
filter(product == 'Presto') %>%
mean_earn = mean(`earnings (reais)`, na.rm = TRUE)
table %>%
filter(product == 'Presto') %>%
summarise(mean_dist = mean(`distance (meters)`, na.rm = TRUE)/1000,
mean_earn = mean(`earnings (reais)`, na.rm = TRUE)
)
17.85938 / 4.451594
table %>%
group_by(driver_id) %>%
summarise(conts = n()) %>%
arrange(counts)
table %>%
group_by(driver_id) %>%
summarise(counts = n()) %>%
arrange(counts)
table %>%
group_by(driver_id) %>%
summarise(counts = n()) %>%
arrange(desc(counts))
(700*80)/100
(500*60)/100
(800*90)/100
560 + 300 + 720
700 + 500 + 800
1580/2000
10000/450
63*0.5
63*0.05
(63*0.05)/100
63-3.15
59.85*110
5000/100
450*20
450-90
360*30
360*30
500*30
360-108
50*50
20^2
sqrt(800)
15^2
225+400sqrt(800)
225+400
sqrt(62)
sqrt(625)
library(highcharter)
preciptation_per_month_per_rain_days
library(ggplot2)
library(dplyr)
library(tidyr)
library(readxl)
library(lubridate)
library(plotly)
library(heatmaply)
library(qgraph)
library(highcharter)
setwd('/home/davi/Desktop/dashboard_precipitacao/')
raw_data <- read_excel(path = 'tabela_precipitacao_tome_acu.xlsx')
raw_data <- as.data.frame(raw_data)
head(raw_data)
firstup <- function(x) {
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
raw_data_gather <- raw_data %>%
gather(key= month, value= precipitation_mm, -day, -year) %>%
mutate(month_numeric = match(firstup(month), month.abb),
date = ymd(paste(year, month_numeric, day, sep = '-')))
str(raw_data_gather)
# Cleaning miss values
raw_data_gather$precipitation_mm[ which(raw_data_gather$precipitation_mm  == '0') ] <- NA
raw_data_gather$precipitation_mm[ which(raw_data_gather$precipitation_mm  == '-') ] <- NA
raw_data_gather$precipitation_mm <- as.numeric(raw_data_gather$precipitation_mm)
# Formating data
raw_data_gather$day <- as.factor(raw_data_gather$day)
raw_data_gather$month <- as.factor(raw_data_gather$month)
raw_data_gather$year <- as.factor(raw_data_gather$year)
head(raw_data_gather)
order_month <- unique(as.character(raw_data_gather$month))
# Remover linhas com NA na data (nao existem por conta do mes)
raw_data_gather <- raw_data_gather[ -which(is.na(raw_data_gather$date)), ]
# Mean precipitation per months per rain days
preciptation_per_month_per_rain_days <- raw_data_gather %>%
group_by(year, month) %>%
summarise(days_rain_month = sum(!is.na(precipitation_mm)),
mean_precip_in_rain_days = sum(precipitation_mm, na.rm = TRUE)/ sum(!is.na(precipitation_mm)))
# Dias de chuva por mes
preciptation_per_month_per_rain_days %>%
ggplot(aes(x=factor(month, levels = order_month), y=days_rain_month, col=year, group=year )) +
geom_line() +
geom_point()
preciptation_per_month_per_rain_days %>%
ggplot(aes(x=factor(month, levels = order_month), y=days_rain_month, col=year, group=year )) +
geom_line() +
geom_point() +
facet_wrap(~year)
# Precipitacao media por mes
raw_data_gather %>%
group_by(year, month) %>%
summarise(mean_precip = mean(precipitation_mm, na.rm = TRUE)) %>%
ggplot(aes(x=factor(month, levels = order_month), y=mean_precip, col=year, group=year )) +
geom_line() +
geom_point()
# Precipitacao toal por mes
raw_data_gather %>%
group_by(year, month) %>%
summarise(total_precip = sum(precipitation_mm, na.rm = TRUE)) %>%
ggplot(aes(x=factor(month, levels = order_month), y=total_precip, col=year, group=year )) +
geom_line() +
geom_point()
# Precipitacao toal por mes
raw_data_gather %>%
group_by(year, month) %>%
summarise(total_precip = sum(precipitation_mm, na.rm = TRUE)) %>%
ggplot(aes(x=factor(month, levels = order_month), y=total_precip, col=year, group=year )) +
geom_line() +
geom_point() +
facet_wrap(~year)
# boxplot precipitacao  mensao ao logo de todos os anos
raw_data_gather %>%
ggplot(aes(x=factor(month, levels = order_month), y=precipitation_mm, fill=year)) +
geom_boxplot()
# boxplot precipitacao  mensal geral
raw_data_gather %>%
ggplot(aes(x=factor(month, levels = order_month), y=precipitation_mm, fill=month)) +
geom_boxplot()
hclust_df <- preciptation_per_month_per_rain_days %>%
mutate(var = paste(year, month, sep = '_')) %>%
ungroup() %>%
select(days_rain_month, mean_precip_in_rain_days, var) %>%
as.data.frame()
# highchart(debug = TRUE) %>%
hc_xAxis(categories = preciptation_per_month_per_rain_days$year)
# highchart(debug = TRUE) %>%
hc_xAxis(categories = preciptation_per_month_per_rain_days$year)
hc_xAxis(categories = preciptation_per_month_per_rain_days$year)
hc_xAxis
highchart(debug = TRUE) %>%
hc_xAxis(categories = preciptation_per_month_per_rain_days$year)
highchart() %>%
hc_xAxis(categories = preciptation_per_month_per_rain_days$year)
library(dygraphs)
install.packages('dygraphs')
library(dygraphs)
nhtemp
lungDeaths
AirPassengers
fdeaths
preciptation_per_month_per_rain_days
preciptation_per_month_per_rain_days
preciptation_per_month_per_rain_days %>%
ungroup()
preciptation_per_month_per_rain_days %>%
ungroup() %>%
select(year, month, mean_precip_in_rain_days)
fdeaths
preciptation_per_month_per_rain_days %>%
ungroup() %>%
select(year, month, mean_precip_in_rain_days) %>%
spread(month,mean_precip_in_rain_days)
preciptation_per_month_per_rain_days %>%
ungroup() %>%
select(year, month, mean_precip_in_rain_days) %>%
spread(month, mean_precip_in_rain_days, -year)
preciptation_per_month_per_rain_days %>%
ungroup() %>%
select(year, month, mean_precip_in_rain_days) %>%
spread(month, mean_precip_in_rain_days)
preciptation_per_month_per_rain_days %>%
ungroup() %>%
select(year, month, mean_precip_in_rain_days)
preciptation_per_month_per_rain_days %>%
ungroup() %>%
select(year, month, mean_precip_in_rain_days) %>%
spread(year, mean_precip_in_rain_days)
fdeaths
mtcars['cyl']
mtcars['cyl']
mtcars[1 , 'cyl']
mtcars
mtcars[1 , 'cyl']
mtcars['cyl']
